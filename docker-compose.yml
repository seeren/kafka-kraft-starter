version: '3.4'
services:

  kafka-gen:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka-gen
    container_name: kafka-gen
    volumes:
      - ./data:/data/
    command: "bash -c 'kafka-storage random-uuid > /data/clusterID'"

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    depends_on:
      - broker1
      - broker2
    environment:
      KAFKA_CLUSTERS_0_NAME: kraft-starter
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker1:19092,broker2:19093
      KAFKA_CLUSTERS_0_METRICS_PORT: 9101
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schemaregistry:8081
      DYNAMIC_CONFIG_ENABLED: 'true'

  kafka-topics:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka-topics
    container_name: kafka-topics
    depends_on:
      - controller1
      - broker1
      - broker2
    volumes:
      - ./create_topics.sh:/create_topics.sh
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                       cub kafka-ready -b broker1:19092 1 40 && \
                       kafka-topics --bootstrap-server broker1:19092 --create --topic kafka.karft.starter.fact.cat.comming && \
                       kafka-topics --bootstrap-server broker1:19092 --create --topic kafka.karft.starter.fact.mouse.run.away'"

  controller1:
    image: confluentinc/cp-kafka:7.4.0
    hostname: controller1
    container_name: controller1
    depends_on:
      - kafka-gen
    ports:
      - 9091:9091
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@controller1:9091'
      KAFKA_LISTENERS: 'CONTROLLER://controller1:9091'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
    volumes:
      - controller1-data:/var/lib/kafka/data
      - ./data/clusterID:/data/clusterID
      - ./.docker/scripts/update-bash-config.sh:/tmp/update-bash-config.sh
    command: "bash -c '/tmp/update-bash-config.sh && /etc/confluent/docker/run'"
   
  broker1:
    image: confluentinc/cp-kafka:7.4.0
    hostname: broker1
    container_name: broker1
    depends_on:
      - controller1
    ports:
      - 9092:9092
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker1:19092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@controller1:9091'
      KAFKA_LISTENERS: 'PLAINTEXT://broker1:19092,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
    volumes:
      - broker1-data:/var/lib/kafka/data
      - ./data/clusterID:/data/clusterID
      - ./.docker/scripts/update-bash-config.sh:/tmp/update-bash-config.sh
    command: "bash -c '/tmp/update-bash-config.sh && /etc/confluent/docker/run'"

  broker2:
    image: confluentinc/cp-kafka:7.4.0
    hostname: broker2
    container_name: broker2
    depends_on:
      - controller1
    ports:
      - 9093:9093
    environment:
      KAFKA_NODE_ID: 3
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker2:19093,PLAINTEXT_HOST://localhost:9103'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@controller1:9091'
      KAFKA_LISTENERS: 'PLAINTEXT://broker2:19093,PLAINTEXT_HOST://0.0.0.0:9093'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
    volumes:
      - broker2-data:/var/lib/kafka/data
      - ./data/clusterID:/data/clusterID
      - ./.docker/scripts/update-bash-config.sh:/tmp/update-bash-config.sh
    command: "bash -c '/tmp/update-bash-config.sh && /etc/confluent/docker/run'"

  schemaregistry:
    image: confluentinc/cp-schema-registry:7.4.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - controller1
      - broker1
      - broker2
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker1:19092,broker2:19093'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

volumes:
  controller1-data:
  broker1-data:
  broker2-data:
